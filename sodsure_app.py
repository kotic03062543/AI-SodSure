import streamlit as st
import numpy as np
from tensorflow.keras.models import load_model # type: ignore
from tensorflow.keras.preprocessing import image # type: ignore
from PIL import Image
import io

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•
@st.cache_resource
def load_sodsure_model():
    model = load_model('meat_model.h5')
    return model

model = load_sodsure_model()
class_names = ['‡∏™‡∏î', '‡πÄ‡∏ô‡πà‡∏≤']

# ‡∏´‡∏ô‡πâ‡∏≤ UI
st.title("ü•© SodSure AI - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠")
st.write("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠ ‡πÅ‡∏•‡πâ‡∏ß AI ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏™‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ô‡πà‡∏≤ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå!")
uploaded_file = st.file_uploader("üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠ (JPEG/JPG/PNG)", type=['jpg', 'jpeg', 'png'])

if uploaded_file is not None:
    # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ
    img = Image.open(uploaded_file)
    st.image(img, caption='‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î', use_column_width=True)

    # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏†‡∏≤‡∏û
    img_resized = img.resize((128, 128))
    img_array = image.img_to_array(img_resized) / 255.0
    img_array = np.expand_dims(img_array, axis=0)

    # ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå
    prediction = model.predict(img_array)
    pred = float(prediction.squeeze())  # ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ß‡πà‡∏≤‡πÄ‡∏ô‡πà‡∏≤
    freshness_percent = (1 - pred) * 100
    predicted_class = class_names[int(pred < 0.5)]

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    st.subheader("üîç ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå")
    st.write(f"üí° **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏î‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì: {freshness_percent:.2f}%**")
    if freshness_percent >= 50:
        st.success(f"‚úÖ ‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡πÄ‡∏ô‡∏∑‡πâ‡∏≠ **'‡∏™‡∏î'** (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à {freshness_percent:.2f}%)")
    else:
        st.error(f"‚ö†Ô∏è ‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡πÄ‡∏ô‡∏∑‡πâ‡∏≠ **'‡πÄ‡∏ô‡πà‡∏≤'** (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à {100 - freshness_percent:.2f}%)")
